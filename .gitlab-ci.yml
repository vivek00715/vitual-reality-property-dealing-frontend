stages:
  - build
  - deploy

cache:
    paths:
    - ./node_modules

build_job:
 image: node:12-alpine
 stage: build
 before_script:
        - echo "Installing NPM Dependencies and running angular application"
 only:
 - master
 script:
  - whoami
  - npm install
# http-server to serve files, gzipper to compress them after build

  - npm install
  - ng build --prod --output-hashing none
  - pwd

 artifacts:
  paths:
    - dist/

deploy_job:
  image: google/cloud-sdk:alpine
  stage: deploy
  dependencies: 
    - build_job
  before_script:
  - "ServiceName=vrpd-frontend"
  - "echo $ServiceName"
  - |
    cat <<EOF >> app.yaml
    runtime: python27
    service: $ServiceName
    api_version: 1
    threadsafe: true
    handlers:
    - url: /(.+\.js)
      static_files: dist/Frontend/\1
      upload: dist/Frontend/(.+\.js)
    
    - url: /(.+\.css)
      static_files: dist/Frontend/\1
      upload: dist/Frontend/(.+\.css)
    
    - url: /(.+\.png)
      static_files: dist/Frontend/\1
      upload: dist/Frontend/(.+\.png)
    
    - url: /(.+\.jpg)
      static_files: dist/Frontend/\1
      upload: dist/Frontend/(.+\.jpg)
    
    - url: /(.+\.svg)
      static_files: dist/Frontend/\1
      upload: dist/Frontend/(.+\.svg)
    
    - url: /favicon.ico
      static_files: dist/Frontend/favicon.ico
      upload: dist/Frontend/favicon.ico
    
    - url: /(.+\.json)
      static_files: dist/Frontend/\1
      upload: dist/Frontend/(.+\.json)
    
    - url: /(.+)
      static_files: dist/Frontend/index.html
      upload: dist/Frontend/index.html
    
    - url: /
      static_files: dist/Frontend/index.html
      upload: dist/Frontend/index.html
    
    skip_files:
      - e2e/
      - node_modules/
      - src/
      - ^(./)?\..$
      - ^(./)?.\.json$
      - ^(./)?.\.md$
      - ^(./)?.\.yaml$
      - ^LICENSE
    EOF
  - "cat app.yaml"
  - echo $SERVICE_ACCOUNT > ${CI_PIPELINE_ID}.json
  script:
  - gcloud auth activate-service-account --key-file $CI_PIPELINE_ID.json
  - gcloud --project hu18-groupa-angular app deploy --version v2
  - url=$(gcloud app services browse $ServiceName --no-launch-browser --project hu18-groupa-angular)
  - echo $url
  after_script:
  - rm $CI_PIPELINE_ID.json
